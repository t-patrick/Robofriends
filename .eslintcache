[{"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\index.js":"1","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\reportWebVitals.js":"2","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Containers\\App.js":"3","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\CardList.js":"4","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\SearchBox.js":"5","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\Scroll.js":"6","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\RoboBox.js":"7","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Containers\\ErrorBoundary.js":"8"},{"size":473,"mtime":1611423657212,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1976,"mtime":1611423657137,"results":"12","hashOfConfig":"10"},{"size":1188,"mtime":1611423657122,"results":"13","hashOfConfig":"10"},{"size":289,"mtime":1611423657132,"results":"14","hashOfConfig":"10"},{"size":394,"mtime":1611423657128,"results":"15","hashOfConfig":"10"},{"size":751,"mtime":1611423657126,"results":"16","hashOfConfig":"10"},{"size":731,"mtime":1611423657142,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"wlasqy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\index.js",[],["38","39"],"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\reportWebVitals.js",[],"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Containers\\App.js",["40","41"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll'\r\nimport ErrorBoundary from './ErrorBoundary'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\nconstructor() {\r\n  super();\r\n  this.state = {\r\n    robots: [],\r\n    searchField: '',\r\n  }\r\n  this.forceLoadingScreen = false;\r\n}\r\n\r\ncomponentDidMount() {\r\n     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(users => {\r\n      console.log(users);\r\n      this.setState({ robots: users })\r\n    });\r\n\r\n  }\r\n\r\nonSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n\r\n    if (event.target.value === 'gotoloading') {\r\n      this.forceLoadingScreen = true;\r\n    }\r\n\r\n}\r\n\r\n\r\n// One observation I have on this, is that the render() method must be rerun when the state changes.\r\n// Another is the idea that any state change must deal with it's intermediate operations before the return. Unless you directly implement it there.\r\n\r\n// // //  My different Contexts:\r\n// 1. Loading\r\nrenderLoading = () => {\r\n  return (<h1 className=\"title\">Loading</h1>);\r\n}\r\n\r\n\r\n// 2. Main Screen\r\n// ErrorBoundary \r\nappLoaded = (filtered) => {\r\n  return (<div className=\"tc\">\r\n  <h1 className=\"title\">Robofriends</h1>\r\n  <SearchBox searchChange={this.onSearchChange}/>\r\n  <Scroll>\r\n    <ErrorBoundary> \r\n      <CardList robots={filtered}/>\r\n    </ErrorBoundary>\r\n  </Scroll>\r\n</div>);\r\n}\r\n\r\n  render() {\r\n    const filtered = this.state.robots.filter((robot) => {\r\n        return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n    });\r\n    if(this.state.robots.length < 5 || this.forceLoadingScreen === true) {\r\n\r\n      return this.renderLoading();\r\n    } else {\r\n\r\n    return this.appLoaded(filtered);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\CardList.js",[],"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\SearchBox.js",[],"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\Scroll.js",[],"C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Components\\RoboBox.js",["42","43","44"],"import React, {Component} from 'react';\r\n// import ReactDOM from 'reactDOM';\r\nimport tachyons from 'tachyons';\r\nimport RoboBox from './RoboBox.css'\r\n\r\n\r\nclass Hello extends Component {\r\n\r\n    \r\n\r\n    // ClassName is what you need to use when used JSX.\r\n    render() {\r\n\r\n        let {name, username, email} = this.props;\r\n        var image = new Image();\r\n        let imsrc = \"https://robohash.org/\" + username + \"?size=200x200\";\r\n        image.src = imsrc;\r\n\r\n        \r\n        return (\r\n            <div className=\"bg-light-blue dib br3 ma2 pa3 grow bw3 shadow-5\"> \r\n                <img src={imsrc}></img>\r\n                <h2>{name}</h2>\r\n                <h3>{email}</h3>\r\n            </div>\r\n        )\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Hello;","C:\\Users\\Tim\\Desktop\\htmlprac\\robofriends\\robofriends\\src\\Containers\\ErrorBoundary.js",["45"],"import { render } from '@testing-library/react';\r\nimport React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false,        \r\n        }\r\n    }\r\n\r\n    // This lifecycle hook will run if there is an error.\r\n    componentDidCatch(error, info) {\r\n        this.setState( { hasError: true });\r\n    }\r\n\r\n    // Returns depending on hasError flag. Note this.props.children reference.\r\n    render() {\r\n        let { hasError } = this.state; \r\n        if(hasError) {\r\n            return (<h1>Oh no, an error</h1>);\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundary;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":16},{"ruleId":"50","severity":1,"message":"56","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":22,"column":17,"nodeType":"59","endLine":22,"endColumn":34},{"ruleId":"50","severity":1,"message":"60","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":16},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'tachyons' is defined but never used.","'RoboBox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]